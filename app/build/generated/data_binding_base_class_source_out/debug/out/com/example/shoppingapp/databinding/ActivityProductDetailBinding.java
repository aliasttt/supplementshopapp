// Generated by view binder compiler. Do not edit!
package com.example.shoppingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoppingapp.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProductDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton addToCartButton;

  @NonNull
  public final TextView descriptionText;

  @NonNull
  public final TextView nameText;

  @NonNull
  public final TextView priceText;

  @NonNull
  public final ImageView productImage;

  @NonNull
  public final TextView stockText;

  @NonNull
  public final Toolbar toolbar;

  private ActivityProductDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton addToCartButton, @NonNull TextView descriptionText,
      @NonNull TextView nameText, @NonNull TextView priceText, @NonNull ImageView productImage,
      @NonNull TextView stockText, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.addToCartButton = addToCartButton;
    this.descriptionText = descriptionText;
    this.nameText = nameText;
    this.priceText = priceText;
    this.productImage = productImage;
    this.stockText = stockText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProductDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProductDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_product_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProductDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addToCartButton;
      FloatingActionButton addToCartButton = ViewBindings.findChildViewById(rootView, id);
      if (addToCartButton == null) {
        break missingId;
      }

      id = R.id.descriptionText;
      TextView descriptionText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionText == null) {
        break missingId;
      }

      id = R.id.nameText;
      TextView nameText = ViewBindings.findChildViewById(rootView, id);
      if (nameText == null) {
        break missingId;
      }

      id = R.id.priceText;
      TextView priceText = ViewBindings.findChildViewById(rootView, id);
      if (priceText == null) {
        break missingId;
      }

      id = R.id.productImage;
      ImageView productImage = ViewBindings.findChildViewById(rootView, id);
      if (productImage == null) {
        break missingId;
      }

      id = R.id.stockText;
      TextView stockText = ViewBindings.findChildViewById(rootView, id);
      if (stockText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityProductDetailBinding((CoordinatorLayout) rootView, addToCartButton,
          descriptionText, nameText, priceText, productImage, stockText, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
